/*
 AngularJS v1.6.4
 (C) 2010-2017 Google, Inc. http://angularjs.org
 Licencia: MIT
*/
(Función (W, b) { 'uso estricto'; función K (q, g) {g = g || {}; b.forEach (g, función (b, h) {borrar g [h]}); for (var h en q)! q.hasOwnProperty (h) || "$" === h.charAt (0) && "$" === h.charAt (1) || (g [h] = q [h]);.. retorno g} var B = b $$ Minerr ( "$ de recursos"), Q = / ^ (\ [a-zA-Z _ $ @] [0-9a-zA-Z _ $ @] *) + $ /; b.module ( "ngResource", [ "ng"]) info ({angularVersion: "1.6.4"}..) proveedor ( "$ de recursos", function () {var = q / ^ https: \ / \ / \ [[^ \]] *] [^ /] * /, g = presente; this.defaults = {stripTrailingSlashes:?! 0, cancelables: 1, acciones: {get: {método: "GET"}, ahorrar: {método: "POST"}, consulta: {método: "GET",
! IsArray: 0}, remover: {método: "BORRAR"}, "eliminar": {método:. "BORRAR"}}}, lo que $ get = [ "$ http", "$ log", "$ q" , "$ de tiempo de espera", de función (h, P, L, M) {función C (b, e) {this.template = b; this.defaults = p ({}, g.defaults, e); this.urlParams = {}} la función x (D, e, u, m) {function c (a, d) {var c = {}; d = p ({}, e, d); t (d, función (d, l) {y (d) && (d = d (a)); var f; si (d && d.charAt && "@" === d.charAt (0)) {f = a; var k = d.substr ( 1); si (null == k || "" === k || "hasOwnProperty" === k || Q.test ( " "+ k) tiro B (.)" badmember", k); for (var k = k.split (), e = 0, g = k.length ""; e <g && b.isDefined (f); e ++) {var h =
k [e]; f = null == f f [h]: void 0}} else f = d; c [l] = f}); retorno c} la función R (a) {return a.resource}!? función l (a) {K (a || {}, this)} var q = new C (D, m); u = p ({}, g.defaults.actions, u); l.prototype.toJSON = function () {var a = p ({}, this); eliminar un $ promesa. borrar un resuelta $;. borrar un $ CancelRequest;. regresar a}; T (U, la función (a, d) {var b !!! = 0 === == 1 || a.hasBody a.hasBody && / ^ (POST | PUT | parche) $ / i.test (a.method), e = a.timeout, g = N (una .cancellable) a.cancellable:?! q.defaults.cancellable; e && S (e) && (P.debug ( "ngResource: \ n Sólo los valores numéricos son permitidas como` timeout` \ n Las promesas no son compatibles con los recursos $. , porque el mismo valor se utiliza para varias peticiones. Si usted está buscando una manera de cancelar solicitudes, se debe utilizar la opción `cancellable`."),
Eliminar a.timeout, e = null); l [d] = función (f, k, m, D) {función u (a) {r.catch (E); z.resolve (a)} var G = { }, v, w, A; conmutador (arguments.length) {case 4: A = D, w = m; caso 3: caso 2: si (y (k)) {if (y (f)) {w = f; A = k; descanso} w = k; A = m} else {G = f; v = k; w = m; descanso} caso 1: y (f) w = f: b v = f:?? G = f; romper; caso 0: break; por defecto:?? banda B ( "badargs", arguments.length);} var F = esta instanceof l, n = F v: a.isArray []: nueva l (v ), s = {}, C = a.interceptor && a.interceptor.response || R, x = a.interceptor && a.interceptor.responseError || void 0, H = !! A, I = !! x, z, J; t (a, función (a, d) {switch (d) {default: s [d] =
T (a); caso "params": caso "IsArray": caso "interceptor": CASE "cancellable":}}) ;! F && g && (z = L.defer (), s.timeout = z.promise, e && ( J = M (z.resolve, e))); b && (s.data = v); q.setUrlParams (s, p ({}, c (v, a.params || {}), G), una .url); var r = h (s) .then (función (f) {var c = f.data; si (c) {if (O (c) == !! a.isArray!) de banda B (" badcfg"?, d, a.isArray "array": "objeto", O (c)? "array": "objeto", s.method, s.url), si (a.isArray) n.length = 0 , t (c, la función (a) { "objeto" === typeof un n.push (nuevo l (a)):? n.push (a)});. else {var b = n $ promesa; K (c, n);. n $ promesa = b}} f.resource = n;
retorno f}), r = r [ "finalmente"] (function () {n $ resuelto = 0;.!. F && g && (n $ CancelRequest = E, M.cancel (J), z = J = s.timeout = null)}), r = r.then (función (a) {var d = C (a); (w || E) (d, a.headers, a.status, a.statusText); retorno d} , H || I función (a) {H && me && r.catch (E); H && a (a); Regrésame x (a):? L.reject (a)}:? nula 0); return F r?: (. n $ promesa = r, n $ resuelto = 1, g && (n $ CancelRequest = u), n.!.)}; l.prototype [ "$" + d] = función (a, c, b) { y (a) && (b = c, c = a, a = {}); a = l [d] .call (esto, una, esto, c, b); devolver un $ promesa || a}}. ); l.bind = función (a) {a = p ({}, e, a); return x (D, a, U, m)};
retorno l} var E = b.noop, t = b.forEach, p = b.extend, T = b.copy, O = b.isArray, N = b.isDefined, y = b.isFunction, S = b. .. ISNUMBER, U = b $$ encodeUriQuery, V = b $$ encodeUriSegment; C.prototype = {setUrlParams: function (b, e, g) {var m = este, c = g || m.template, h, l, p = "", a = m.urlParams = Object.create (null); t (c.split (/ \ W /), función (d) {if ( "hasOwnProperty" === d) de banda B ( "BadName"); / ^ \ d + $ / test (d) && d && (new RegExp ( "(^ | [^ \\\\]):" + d + "(\\ W | $)"))!.. prueba (c) && (una [d] = {isQueryParamValue: (new RegExp ( "\\ * =:?". + d + "(?: \\ W | $)".)) prueba (c)})} ); c = c.replace (/ \\: / g, ":");
c = c.replace (q, la función (a) {p = a; retorno ""}); e = e || {}; t (m.urlParams, la función (a, b) {h = e.hasOwnProperty ( ? b) e [b]: m.defaults [b]; N (h) && nula == h (l = a.isQueryParamValue U (h, 0?!?!): V (h), c = c.replace (nuevo RegExp ( ":" + b + "(\\ W | $)", "g"), la función (a, b) {return l + b})): c = c.replace (nuevo RegExp ( "( /?):"+b+"(\\W|$)","g"),function(a,b,d){return"/"===d.charAt(0)?d:b+d })}); m.defaults.stripTrailingSlashes && (c = c.replace (/ \ / + $ /, "") || "/");.? c = c.replace (/ \ / \ (= \ w + (? $ | \)) /,); b.url = p + c.replace (/ \ / (\\ |% 5C) \ ./, "/."); "" t (e, la función ( a, c) {m.urlParams [c] ||
(B.params = b.params || {}, b.params [c] = a)})}}; return x}]})}) (ventana, window.angular);
// # sourceMappingURL = angular-resource.min.js.map

